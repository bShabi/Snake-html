{
    "sourceFile": "main.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1732987737669,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1732987737669,
            "name": "Commit-0",
            "content": "const canvas = document.getElementById('gameCanvas');\nconst ctx = canvas.getContext('2d');\nconst scoreElement = document.getElementById('score');\n\nfunction resizeCanvas() {\n    const container = document.querySelector('.game-container');\n    const size = Math.min(container.offsetWidth - 20, 400);\n    canvas.style.width = size + 'px';\n    canvas.style.height = size + 'px';\n}\n\nwindow.addEventListener('resize', resizeCanvas);\nresizeCanvas();\n\nconst gridSize = 20;\nconst tileCount = canvas.width / gridSize;\n\nlet snake = [{x: 10, y: 10}];\nlet food = generateFood();\nlet dx = 0;\nlet dy = 0;\nlet score = 0;\nlet gameOver = false;\n\nfunction generateFood() {\n    return {\n        x: Math.floor(Math.random() * tileCount),\n        y: Math.floor(Math.random() * tileCount)\n    };\n}\n\nfunction drawGame() {\n    if (gameOver) {\n        ctx.fillStyle = '#666';\n        ctx.font = '30px Arial';\n        ctx.textAlign = 'center';\n        ctx.fillText('Game Over!', canvas.width/2, canvas.height/2);\n        ctx.font = '20px Arial';\n        ctx.fillText('Tap or Press Space to Restart', canvas.width/2, canvas.height/2 + 40);\n        return;\n    }\n    \n    const head = {x: snake[0].x + dx, y: snake[0].y + dy};\n    snake.unshift(head);\n    \n    if (head.x === food.x && head.y === food.y) {\n        score += 10;\n        scoreElement.textContent = score;\n        food = generateFood();\n    } else {\n        snake.pop();\n    }\n    \n    ctx.fillStyle = 'white';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    \n    ctx.fillStyle = 'red';\n    ctx.fillRect(food.x * gridSize, food.y * gridSize, gridSize-2, gridSize-2);\n    \n    ctx.fillStyle = 'green';\n    snake.forEach(segment => {\n        ctx.fillRect(segment.x * gridSize, segment.y * gridSize, gridSize-2, gridSize-2);\n    });\n    \n    if (head.x < 0 || head.x >= tileCount || head.y < 0 || head.y >= tileCount) {\n        gameOver = true;\n    }\n    \n    for (let i = 1; i < snake.length; i++) {\n        if (head.x === snake[i].x && head.y === snake[i].y) {\n            gameOver = true;\n        }\n    }\n}\n\nfunction gameLoop() {\n    drawGame();\n    setTimeout(gameLoop, 100);\n}\n\nfunction resetGame() {\n    snake = [{x: 10, y: 10}];\n    food = generateFood();\n    dx = 0;\n    dy = 0;\n    score = 0;\n    scoreElement.textContent = score;\n    gameOver = false;\n}\n\ndocument.querySelectorAll('.control-btn').forEach(button => {\n    ['touchstart', 'click'].forEach(eventType => {\n        button.addEventListener(eventType, (e) => {\n            e.preventDefault();\n            if (gameOver) {\n                resetGame();\n                return;\n            }\n            \n            switch(button.className.split(' ')[1]) {\n                case 'up':\n                    if (dy === 0) { dx = 0; dy = -1; }\n                    break;\n                case 'down':\n                    if (dy === 0) { dx = 0; dy = 1; }\n                    break;\n                case 'left':\n                    if (dx === 0) { dx = -1; dy = 0; }\n                    break;\n                case 'right':\n                    if (dx === 0) { dx = 1; dy = 0; }\n                    break;\n            }\n        });\n    });\n});\n\ndocument.addEventListener('keydown', (event) => {\n    if (gameOver && event.code === 'Space') {\n        resetGame();\n        return;\n    }\n    \n    switch (event.key) {\n        case 'ArrowUp':\n            if (dy === 0) { dx = 0; dy = -1; }\n            break;\n        case 'ArrowDown':\n            if (dy === 0) { dx = 0; dy = 1; }\n            break;\n        case 'ArrowLeft':\n            if (dx === 0) { dx = -1; dy = 0; }\n            break;\n        case 'ArrowRight':\n            if (dx === 0) { dx = 1; dy = 0; }\n            break;\n    }\n});\n\ncanvas.addEventListener('click', () => {\n    if (gameOver) {\n        resetGame();\n    }\n});\n\ngameLoop();\n"
        }
    ]
}